plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'shigarov.practicum'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

//test {
//	jvmArgs '-Dfile.encoding=UTF8'
//}
//
//compileJava.options.encoding = 'UTF-8'
//
//tasks.withType(JavaCompile) {
//	options.encoding = 'UTF-8'
//}
//
//tasks.withType(Copy) {
//	// Устанавливаем кодировку для всех ресурсов
//	def encoding = 'UTF-8'
//	def propertiesEncoding = 'ISO-8859-1'
//
//	// Настройка кодировки для основных ресурсов
//	processResources {
//		filteringCharset = encoding
//	}
//
//	// Настройка кодировки для тестовых ресурсов
//	processTestResources {
//		filteringCharset = encoding
//	}
//
//	// Настройка кодировки для .properties файлов
//	filesMatching('**/*.properties') {
//		filteringCharset = propertiesEncoding
//	}
//}
